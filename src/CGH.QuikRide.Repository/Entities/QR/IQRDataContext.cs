// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CGH.QuikRide.Repository.Entities.QR
{

    public partial interface IQRDataContext : System.IDisposable
    {
        System.Data.Entity.DbSet<Driver> Drivers { get; set; } // Driver
        System.Data.Entity.DbSet<DriverShift> DriverShifts { get; set; } // DriverShift
        System.Data.Entity.DbSet<Feedback> Feedbacks { get; set; } // Feedback
        System.Data.Entity.DbSet<FeedbackInitiatorType> FeedbackInitiatorTypes { get; set; } // FeedbackInitiatorType
        System.Data.Entity.DbSet<FeedbackType> FeedbackTypes { get; set; } // FeedbackType
        System.Data.Entity.DbSet<GenderType> GenderTypes { get; set; } // GenderType
        System.Data.Entity.DbSet<Holiday> Holidays { get; set; } // Holiday
        System.Data.Entity.DbSet<LanguageType> LanguageTypes { get; set; } // LanguageType
        System.Data.Entity.DbSet<Location> Locations { get; set; } // Location
        System.Data.Entity.DbSet<NotificationType> NotificationTypes { get; set; } // NotificationType
        System.Data.Entity.DbSet<Reservation> Reservations { get; set; } // Reservation
        System.Data.Entity.DbSet<ReservationCancellationReasonType> ReservationCancellationReasonTypes { get; set; } // ReservationCancellationReasonType
        System.Data.Entity.DbSet<ReservationRequest> ReservationRequests { get; set; } // ReservationRequest
        System.Data.Entity.DbSet<ReservationRequestCancellationReasonType> ReservationRequestCancellationReasonTypes { get; set; } // ReservationRequestCancellationReasonType
        System.Data.Entity.DbSet<ReservationRequestOption> ReservationRequestOptions { get; set; } // ReservationRequestOption
        System.Data.Entity.DbSet<ReservationRequestStatusType> ReservationRequestStatusTypes { get; set; } // ReservationRequestStatusType
        System.Data.Entity.DbSet<ReservationStatusType> ReservationStatusTypes { get; set; } // ReservationStatusType
        System.Data.Entity.DbSet<Ride> Rides { get; set; } // Ride
        System.Data.Entity.DbSet<RidePosition> RidePositions { get; set; } // RidePosition
        System.Data.Entity.DbSet<RideServiceType> RideServiceTypes { get; set; } // RideServiceType
        System.Data.Entity.DbSet<User> Users { get; set; } // Users
        System.Data.Entity.DbSet<UsersLocation> UsersLocations { get; set; } // Users_Location
        System.Data.Entity.DbSet<UsersNotificationType> UsersNotificationTypes { get; set; } // Users_NotificationType
        System.Data.Entity.DbSet<Vehicle> Vehicles { get; set; } // Vehicle
        System.Data.Entity.DbSet<VehicleFeatureType> VehicleFeatureTypes { get; set; } // VehicleFeatureType
        System.Data.Entity.DbSet<VehicleStatusType> VehicleStatusTypes { get; set; } // VehicleStatusType
        System.Data.Entity.DbSet<VehicleType> VehicleTypes { get; set; } // VehicleType
        System.Data.Entity.DbSet<VehicleTypeVehicleFeatureType> VehicleTypeVehicleFeatureTypes { get; set; } // VehicleType_VehicleFeatureType
        System.Data.Entity.DbSet<VehicleVehicleFeatureType> VehicleVehicleFeatureTypes { get; set; } // Vehicle_VehicleFeatureType

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

}
// </auto-generated>

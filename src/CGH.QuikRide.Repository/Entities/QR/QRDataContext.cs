// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CGH.QuikRide.Repository.Entities.QR
{

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class QRDataContext : System.Data.Entity.DbContext, IQRDataContext
    {
        public System.Data.Entity.DbSet<Driver> Drivers { get; set; } // Driver
        public System.Data.Entity.DbSet<Feedback> Feedbacks { get; set; } // Feedback
        public System.Data.Entity.DbSet<FeedbackType> FeedbackTypes { get; set; } // FeedbackType
        public System.Data.Entity.DbSet<GenderType> GenderTypes { get; set; } // GenderType
        public System.Data.Entity.DbSet<Holiday> Holidays { get; set; } // Holiday
        public System.Data.Entity.DbSet<LanguageType> LanguageTypes { get; set; } // LanguageType
        public System.Data.Entity.DbSet<Location> Locations { get; set; } // Location
        public System.Data.Entity.DbSet<NotificationType> NotificationTypes { get; set; } // NotificationType
        public System.Data.Entity.DbSet<Reservation> Reservations { get; set; } // Reservation
        public System.Data.Entity.DbSet<ReservationCancellationReasonType> ReservationCancellationReasonTypes { get; set; } // ReservationCancellationReasonType
        public System.Data.Entity.DbSet<ReservationRequest> ReservationRequests { get; set; } // ReservationRequest
        public System.Data.Entity.DbSet<ReservationRequestCancellationReasonType> ReservationRequestCancellationReasonTypes { get; set; } // ReservationRequestCancellationReasonType
        public System.Data.Entity.DbSet<ReservationRequestOption> ReservationRequestOptions { get; set; } // ReservationRequestOption
        public System.Data.Entity.DbSet<ReservationRequestStatusType> ReservationRequestStatusTypes { get; set; } // ReservationRequestStatusType
        public System.Data.Entity.DbSet<ReservationStatusType> ReservationStatusTypes { get; set; } // ReservationStatusType
        public System.Data.Entity.DbSet<Ride> Rides { get; set; } // Ride
        public System.Data.Entity.DbSet<RidePosition> RidePositions { get; set; } // RidePosition
        public System.Data.Entity.DbSet<RideServiceType> RideServiceTypes { get; set; } // RideServiceType
        public System.Data.Entity.DbSet<User> Users { get; set; } // Users
        public System.Data.Entity.DbSet<UsersLocation> UsersLocations { get; set; } // Users_Location
        public System.Data.Entity.DbSet<UsersNotificationType> UsersNotificationTypes { get; set; } // Users_NotificationType
        public System.Data.Entity.DbSet<Vehicle> Vehicles { get; set; } // Vehicle
        public System.Data.Entity.DbSet<VehicleFeatureType> VehicleFeatureTypes { get; set; } // VehicleFeatureType
        public System.Data.Entity.DbSet<VehicleStatusType> VehicleStatusTypes { get; set; } // VehicleStatusType
        public System.Data.Entity.DbSet<VehicleType> VehicleTypes { get; set; } // VehicleType
        public System.Data.Entity.DbSet<VehicleTypeVehicleFeatureType> VehicleTypeVehicleFeatureTypes { get; set; } // VehicleType_VehicleFeatureType
        public System.Data.Entity.DbSet<VehicleVehicleFeatureType> VehicleVehicleFeatureTypes { get; set; } // Vehicle_VehicleFeatureType

        static QRDataContext()
        {
            System.Data.Entity.Database.SetInitializer<QRDataContext>(null);
        }

        public QRDataContext()
            : base("Name=QuikRideDB")
        {
            InitializePartial();
        }

        public QRDataContext(string connectionString)
            : base(connectionString)
        {
            InitializePartial();
        }

        public QRDataContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
            InitializePartial();
        }

        public QRDataContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
            InitializePartial();
        }

        public QRDataContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
            InitializePartial();
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new DriverConfiguration());
            modelBuilder.Configurations.Add(new FeedbackConfiguration());
            modelBuilder.Configurations.Add(new FeedbackTypeConfiguration());
            modelBuilder.Configurations.Add(new GenderTypeConfiguration());
            modelBuilder.Configurations.Add(new HolidayConfiguration());
            modelBuilder.Configurations.Add(new LanguageTypeConfiguration());
            modelBuilder.Configurations.Add(new LocationConfiguration());
            modelBuilder.Configurations.Add(new NotificationTypeConfiguration());
            modelBuilder.Configurations.Add(new ReservationConfiguration());
            modelBuilder.Configurations.Add(new ReservationCancellationReasonTypeConfiguration());
            modelBuilder.Configurations.Add(new ReservationRequestConfiguration());
            modelBuilder.Configurations.Add(new ReservationRequestCancellationReasonTypeConfiguration());
            modelBuilder.Configurations.Add(new ReservationRequestOptionConfiguration());
            modelBuilder.Configurations.Add(new ReservationRequestStatusTypeConfiguration());
            modelBuilder.Configurations.Add(new ReservationStatusTypeConfiguration());
            modelBuilder.Configurations.Add(new RideConfiguration());
            modelBuilder.Configurations.Add(new RidePositionConfiguration());
            modelBuilder.Configurations.Add(new RideServiceTypeConfiguration());
            modelBuilder.Configurations.Add(new UserConfiguration());
            modelBuilder.Configurations.Add(new UsersLocationConfiguration());
            modelBuilder.Configurations.Add(new UsersNotificationTypeConfiguration());
            modelBuilder.Configurations.Add(new VehicleConfiguration());
            modelBuilder.Configurations.Add(new VehicleFeatureTypeConfiguration());
            modelBuilder.Configurations.Add(new VehicleStatusTypeConfiguration());
            modelBuilder.Configurations.Add(new VehicleTypeConfiguration());
            modelBuilder.Configurations.Add(new VehicleTypeVehicleFeatureTypeConfiguration());
            modelBuilder.Configurations.Add(new VehicleVehicleFeatureTypeConfiguration());

            OnModelCreatingPartial(modelBuilder);
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new DriverConfiguration(schema));
            modelBuilder.Configurations.Add(new FeedbackConfiguration(schema));
            modelBuilder.Configurations.Add(new FeedbackTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new GenderTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new HolidayConfiguration(schema));
            modelBuilder.Configurations.Add(new LanguageTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new LocationConfiguration(schema));
            modelBuilder.Configurations.Add(new NotificationTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new ReservationConfiguration(schema));
            modelBuilder.Configurations.Add(new ReservationCancellationReasonTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new ReservationRequestConfiguration(schema));
            modelBuilder.Configurations.Add(new ReservationRequestCancellationReasonTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new ReservationRequestOptionConfiguration(schema));
            modelBuilder.Configurations.Add(new ReservationRequestStatusTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new ReservationStatusTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new RideConfiguration(schema));
            modelBuilder.Configurations.Add(new RidePositionConfiguration(schema));
            modelBuilder.Configurations.Add(new RideServiceTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new UserConfiguration(schema));
            modelBuilder.Configurations.Add(new UsersLocationConfiguration(schema));
            modelBuilder.Configurations.Add(new UsersNotificationTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new VehicleConfiguration(schema));
            modelBuilder.Configurations.Add(new VehicleFeatureTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new VehicleStatusTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new VehicleTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new VehicleTypeVehicleFeatureTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new VehicleVehicleFeatureTypeConfiguration(schema));
            return modelBuilder;
        }

        partial void InitializePartial();
        partial void OnModelCreatingPartial(System.Data.Entity.DbModelBuilder modelBuilder);
    }
}
// </auto-generated>

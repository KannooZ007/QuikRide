// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CGH.QuikRide.Repository.Entities.QR
{

    // ReservationRequest
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class ReservationRequest
    {
        public System.Guid ReservationRequestId { get; set; } // ReservationRequestId (Primary key)
        public int UserId { get; set; } // UserId
        public System.Guid PickupLocationId { get; set; } // PickupLocationId
        public System.Guid DestinationLocationId { get; set; } // DestinationLocationId
        public int ReservationRequestStatusTypeId { get; set; } // ReservationRequestStatusTypeId
        public int? ReservationRequestCancellationReasonTypeId { get; set; } // ReservationRequestCancellationReasonTypeId
        public System.DateTime? RequestedPickupStart { get; set; } // RequestedPickupStart
        public System.DateTime? RequestedPickupEnd { get; set; } // RequestedPickupEnd
        public System.DateTime? RequestedArrivalStart { get; set; } // RequestedArrivalStart
        public System.DateTime? RequestedArrivalEnd { get; set; } // RequestedArrivalEnd
        public int NumberOfAdults { get; set; } // NumberOfAdults
        public int NumberOfChildren { get; set; } // NumberOfChildren
        public int NumberOfBabies { get; set; } // NumberOfBabies
        public int? NumberOfWheelchairs { get; set; } // NumberOfWheelchairs
        public int? NumberOfBikes { get; set; } // NumberOfBikes
        public bool PersonalCareAttendantIncluded { get; set; } // PersonalCareAttendantIncluded
        public bool PassengerRequiresAssistance { get; set; } // PassengerRequiresAssistance
        public System.Guid? ReservationId { get; set; } // ReservationId
        public System.Guid? ReplacesReservationId { get; set; } // ReplacesReservationId
        public int DataVersion { get; set; } // DataVersion
        public System.DateTime CreatedUtcDate { get; set; } // CreatedUtcDate
        public string CreatedBy { get; set; } // CreatedBy (length: 200)
        public System.DateTime ModifiedUtcDate { get; set; } // ModifiedUtcDate
        public string ModifiedBy { get; set; } // ModifiedBy (length: 200)
        public bool IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent Location pointed by [ReservationRequest].([DestinationLocationId]) (FK_ReservationRequest_DestinationLocation)
        /// </summary>
        public Location DestinationLocation { get; set; } // FK_ReservationRequest_DestinationLocation

        /// <summary>
        /// Parent Location pointed by [ReservationRequest].([PickupLocationId]) (FK_ReservationRequest_PickupLocation)
        /// </summary>
        public Location PickupLocation { get; set; } // FK_ReservationRequest_PickupLocation

        /// <summary>
        /// Parent Reservation pointed by [ReservationRequest].([ReplacesReservationId]) (FK_ReservationRequest_Reservation)
        /// </summary>
        public Reservation Reservation { get; set; } // FK_ReservationRequest_Reservation

        /// <summary>
        /// Parent ReservationRequestCancellationReasonType pointed by [ReservationRequest].([ReservationRequestCancellationReasonTypeId]) (FK_ReservationRequest_ReservationRequestCancellationReasonType)
        /// </summary>
        public ReservationRequestCancellationReasonType ReservationRequestCancellationReasonType { get; set; } // FK_ReservationRequest_ReservationRequestCancellationReasonType

        /// <summary>
        /// Parent ReservationRequestStatusType pointed by [ReservationRequest].([ReservationRequestStatusTypeId]) (FK_ReservationRequest_ReservationRequestStatusType)
        /// </summary>
        public ReservationRequestStatusType ReservationRequestStatusType { get; set; } // FK_ReservationRequest_ReservationRequestStatusType

        /// <summary>
        /// Parent User pointed by [ReservationRequest].([UserId]) (FK_ReservationRequest_Users)
        /// </summary>
        public User User { get; set; } // FK_ReservationRequest_Users

        public ReservationRequest()
        {
            NumberOfWheelchairs = 0;
            NumberOfBikes = 0;
            PersonalCareAttendantIncluded = false;
            PassengerRequiresAssistance = false;
            DataVersion = 1;
            CreatedUtcDate = System.DateTime.UtcNow;
            ModifiedUtcDate = System.DateTime.UtcNow;
            IsDeleted = false;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>

// <auto-generated> - Template:AutoMapperProfile, Version:1.1, Id:f3f865a7-e545-4bc4-b0ba-c9e7ee587e73
using AutoMapper;
using xDTO = CGH.QuikRide.DTO.QR;
using xENT = CGH.QuikRide.Repository.Entities.QR;

namespace CGH.QuikRide.Repository.Infrastructure
{
	public partial class QRAutoMapperProfile : Profile
	{
		public QRAutoMapperProfile()
		{
			InitializeProfile();
			InitializePartial();
		}

		partial void InitializePartial();

		private void InitializeProfile()
		{
			CreateMap<xDTO.Barcode, xENT.Barcode>()
				.ForMember(d => d.BarcodeScanLogs, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				// .ForMember(d => d.BarcodeType, opt => opt.Ignore())
			.ReverseMap();

			CreateMap<xDTO.BarcodeScanLog, xENT.BarcodeScanLog>()
				// .ForMember(d => d.Barcode, opt => opt.Ignore())
			.ReverseMap();

			CreateMap<xDTO.BarcodeType, xENT.BarcodeType>()
				.ForMember(d => d.Barcodes, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				// .ForMember(d => d.BarcodeTypeTranslations, opt => opt.Ignore()) // Reverse nav
			.ReverseMap();

			CreateMap<xDTO.BarcodeTypeTranslation, xENT.BarcodeTypeTranslation>()
				.ForMember(d => d.BarcodeType, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
				// .ForMember(d => d.LanguageType, opt => opt.Ignore())
			.ReverseMap();

			CreateMap<xDTO.BusRoute, xENT.BusRoute>()
				// .ForMember(d => d.BusRouteStops, opt => opt.Ignore()) // Reverse nav
				// .ForMember(d => d.BusRouteTranslations, opt => opt.Ignore()) // Reverse nav
				.ForMember(d => d.VehicleBusRoutes, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.BusRouteStop, xENT.BusRouteStop>()
				.ForMember(d => d.BusRoute, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
				// .ForMember(d => d.Location, opt => opt.Ignore())
			.ReverseMap();

			CreateMap<xDTO.BusRouteTranslation, xENT.BusRouteTranslation>()
				.ForMember(d => d.BusRoute, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
				// .ForMember(d => d.LanguageType, opt => opt.Ignore())
			.ReverseMap();

			CreateMap<xDTO.Driver, xENT.Driver>()
				.ForMember(d => d.Rides, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				// .ForMember(d => d.User, opt => opt.Ignore())
				// .ForMember(d => d.Vehicle, opt => opt.Ignore())
			.ReverseMap();

			CreateMap<xDTO.DriverShift, xENT.DriverShift>()
			.ReverseMap();

			CreateMap<xDTO.Feedback, xENT.Feedback>()
				// .ForMember(d => d.FeedbackInitiatorType, opt => opt.Ignore())
				// .ForMember(d => d.FeedbackType, opt => opt.Ignore())
			.ReverseMap();

			CreateMap<xDTO.FeedbackInitiatorType, xENT.FeedbackInitiatorType>()
				// .ForMember(d => d.FeedbackInitiatorTypeTranslations, opt => opt.Ignore()) // Reverse nav
				.ForMember(d => d.Feedbacks, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.FeedbackInitiatorTypeTranslation, xENT.FeedbackInitiatorTypeTranslation>()
				.ForMember(d => d.FeedbackInitiatorType, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
				// .ForMember(d => d.LanguageType, opt => opt.Ignore())
			.ReverseMap();

			CreateMap<xDTO.FeedbackType, xENT.FeedbackType>()
				.ForMember(d => d.Feedbacks, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				// .ForMember(d => d.FeedbackTypeTranslations, opt => opt.Ignore()) // Reverse nav
			.ReverseMap();

			CreateMap<xDTO.FeedbackTypeTranslation, xENT.FeedbackTypeTranslation>()
				.ForMember(d => d.FeedbackType, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
				// .ForMember(d => d.LanguageType, opt => opt.Ignore())
			.ReverseMap();

			CreateMap<xDTO.GenderType, xENT.GenderType>()
				// .ForMember(d => d.GenderTypeTranslations, opt => opt.Ignore()) // Reverse nav
				.ForMember(d => d.Users, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.GenderTypeTranslation, xENT.GenderTypeTranslation>()
				.ForMember(d => d.GenderType, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
				// .ForMember(d => d.LanguageType, opt => opt.Ignore())
			.ReverseMap();

			CreateMap<xDTO.Holiday, xENT.Holiday>()
				// .ForMember(d => d.HolidayTranslations, opt => opt.Ignore()) // Reverse nav
			.ReverseMap();

			CreateMap<xDTO.HolidayTranslation, xENT.HolidayTranslation>()
				.ForMember(d => d.Holiday, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
				// .ForMember(d => d.LanguageType, opt => opt.Ignore())
			.ReverseMap();

			CreateMap<xDTO.LanguageType, xENT.LanguageType>()
				.ForMember(d => d.BarcodeTypeTranslations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.BusRouteTranslations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.FeedbackInitiatorTypeTranslations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.FeedbackTypeTranslations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.GenderTypeTranslations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.HolidayTranslations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.LocationTypeTranslations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.NotificationTypeTranslations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.ReservationCancellationReasonTypeTranslations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.ReservationRequestCancellationReasonTypeTranslations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.ReservationRequestStatusTypeTranslations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.ReservationStatusTypeTranslations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.RideServiceTypeTranslations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.UserRewardAccountTransactionTypeTranslations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.Users, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.VehicleFeatureTypeTranslations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.VehicleStatusTypeTranslations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.Location, xENT.Location>()
				.ForMember(d => d.BusRouteStops, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.DestinationLocation, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.PickupLocation, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.Reservations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.UsersLocations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				// .ForMember(d => d.LocationType, opt => opt.Ignore())
			.ReverseMap();

			CreateMap<xDTO.LocationType, xENT.LocationType>()
				.ForMember(d => d.Locations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				// .ForMember(d => d.LocationTypeTranslations, opt => opt.Ignore()) // Reverse nav
			.ReverseMap();

			CreateMap<xDTO.LocationTypeTranslation, xENT.LocationTypeTranslation>()
				// .ForMember(d => d.LanguageType, opt => opt.Ignore())
				.ForMember(d => d.LocationType, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.NotificationType, xENT.NotificationType>()
				// .ForMember(d => d.NotificationTypeTranslations, opt => opt.Ignore()) // Reverse nav
				.ForMember(d => d.UsersNotificationTypes, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.NotificationTypeTranslation, xENT.NotificationTypeTranslation>()
				// .ForMember(d => d.LanguageType, opt => opt.Ignore())
				.ForMember(d => d.NotificationType, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.Reservation, xENT.Reservation>()
				.ForMember(d => d.ReservationRequests, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				// .ForMember(d => d.Location, opt => opt.Ignore())
				// .ForMember(d => d.ReservationCancellationReasonType, opt => opt.Ignore())
				// .ForMember(d => d.ReservationRequestOption, opt => opt.Ignore())
				.ForMember(d => d.User, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.ReservationCancellationReasonType, xENT.ReservationCancellationReasonType>()
				// .ForMember(d => d.ReservationCancellationReasonTypeTranslations, opt => opt.Ignore()) // Reverse nav
				.ForMember(d => d.Reservations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.ReservationCancellationReasonTypeTranslation, xENT.ReservationCancellationReasonTypeTranslation>()
				// .ForMember(d => d.LanguageType, opt => opt.Ignore())
				.ForMember(d => d.ReservationCancellationReasonType, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.ReservationRequest, xENT.ReservationRequest>()
				// .ForMember(d => d.DestinationLocation, opt => opt.Ignore())
				// .ForMember(d => d.PickupLocation, opt => opt.Ignore())
				// .ForMember(d => d.Reservation, opt => opt.Ignore())
				// .ForMember(d => d.ReservationRequestCancellationReasonType, opt => opt.Ignore())
				// .ForMember(d => d.ReservationRequestStatusType, opt => opt.Ignore())
				.ForMember(d => d.User, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.ReservationRequestCancellationReasonType, xENT.ReservationRequestCancellationReasonType>()
				// .ForMember(d => d.ReservationRequestCancellationReasonTypeTranslations, opt => opt.Ignore()) // Reverse nav
				.ForMember(d => d.ReservationRequests, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.ReservationRequestCancellationReasonTypeTranslation, xENT.ReservationRequestCancellationReasonTypeTranslation>()
				// .ForMember(d => d.LanguageType, opt => opt.Ignore())
				.ForMember(d => d.ReservationRequestCancellationReasonType, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.ReservationRequestOption, xENT.ReservationRequestOption>()
				.ForMember(d => d.Reservations, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.ReservationRequestStatusType, xENT.ReservationRequestStatusType>()
				.ForMember(d => d.ReservationRequests, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				// .ForMember(d => d.ReservationRequestStatusTypeTranslations, opt => opt.Ignore()) // Reverse nav
			.ReverseMap();

			CreateMap<xDTO.ReservationRequestStatusTypeTranslation, xENT.ReservationRequestStatusTypeTranslation>()
				// .ForMember(d => d.LanguageType, opt => opt.Ignore())
				.ForMember(d => d.ReservationRequestStatusType, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.ReservationStatusType, xENT.ReservationStatusType>()
				// .ForMember(d => d.ReservationStatusTypeTranslations, opt => opt.Ignore()) // Reverse nav
			.ReverseMap();

			CreateMap<xDTO.ReservationStatusTypeTranslation, xENT.ReservationStatusTypeTranslation>()
				// .ForMember(d => d.LanguageType, opt => opt.Ignore())
				.ForMember(d => d.ReservationStatusType, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.Ride, xENT.Ride>()
				// .ForMember(d => d.RidePositions, opt => opt.Ignore()) // Reverse nav
				// .ForMember(d => d.Driver, opt => opt.Ignore())
				.ForMember(d => d.User, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
				// .ForMember(d => d.Vehicle, opt => opt.Ignore())
			.ReverseMap();

			CreateMap<xDTO.RidePosition, xENT.RidePosition>()
				.ForMember(d => d.Ride, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.RideServiceType, xENT.RideServiceType>()
				// .ForMember(d => d.RideServiceTypeTranslations, opt => opt.Ignore()) // Reverse nav
			.ReverseMap();

			CreateMap<xDTO.RideServiceTypeTranslation, xENT.RideServiceTypeTranslation>()
				// .ForMember(d => d.LanguageType, opt => opt.Ignore())
				.ForMember(d => d.RideServiceType, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.User, xENT.User>()
				.ForMember(d => d.Drivers, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				// .ForMember(d => d.ReservationRequests, opt => opt.Ignore()) // Reverse nav
				// .ForMember(d => d.Reservations, opt => opt.Ignore()) // Reverse nav
				// .ForMember(d => d.Rides, opt => opt.Ignore()) // Reverse nav
				// .ForMember(d => d.UsersLocations, opt => opt.Ignore()) // Reverse nav
				// .ForMember(d => d.UsersNotificationTypes, opt => opt.Ignore()) // Reverse nav
				// .ForMember(d => d.GenderType, opt => opt.Ignore())
				// .ForMember(d => d.LanguageType, opt => opt.Ignore())
			.ReverseMap();

			CreateMap<xDTO.UserRewardAccount, xENT.UserRewardAccount>()
			.ReverseMap();

			CreateMap<xDTO.UserRewardAccountTransaction, xENT.UserRewardAccountTransaction>()
				// .ForMember(d => d.UserRewardAccountTransactionType, opt => opt.Ignore())
			.ReverseMap();

			CreateMap<xDTO.UserRewardAccountTransactionType, xENT.UserRewardAccountTransactionType>()
				.ForMember(d => d.UserRewardAccountTransactions, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				// .ForMember(d => d.UserRewardAccountTransactionTypeTranslations, opt => opt.Ignore()) // Reverse nav
			.ReverseMap();

			CreateMap<xDTO.UserRewardAccountTransactionTypeTranslation, xENT.UserRewardAccountTransactionTypeTranslation>()
				// .ForMember(d => d.LanguageType, opt => opt.Ignore())
				.ForMember(d => d.UserRewardAccountTransactionType, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.UsersLocation, xENT.UsersLocation>()
				.ForMember(d => d.Location, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
				.ForMember(d => d.User, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.UsersNotificationType, xENT.UsersNotificationType>()
				.ForMember(d => d.NotificationType, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
				.ForMember(d => d.User, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.Vehicle, xENT.Vehicle>()
				.ForMember(d => d.Drivers, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				.ForMember(d => d.Rides, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				// .ForMember(d => d.VehicleBusRoutes, opt => opt.Ignore()) // Reverse nav
				// .ForMember(d => d.VehicleVehicleFeatureTypes, opt => opt.Ignore()) // Reverse nav
				// .ForMember(d => d.VehicleStatusType, opt => opt.Ignore())
				// .ForMember(d => d.VehicleType, opt => opt.Ignore())
			.ReverseMap();

			CreateMap<xDTO.VehicleBusRoute, xENT.VehicleBusRoute>()
				.ForMember(d => d.BusRoute, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
				.ForMember(d => d.Vehicle, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.VehicleFeatureType, xENT.VehicleFeatureType>()
				// .ForMember(d => d.VehicleFeatureTypeTranslations, opt => opt.Ignore()) // Reverse nav
				// .ForMember(d => d.VehicleTypeVehicleFeatureTypes, opt => opt.Ignore()) // Reverse nav
				.ForMember(d => d.VehicleVehicleFeatureTypes, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.VehicleFeatureTypeTranslation, xENT.VehicleFeatureTypeTranslation>()
				// .ForMember(d => d.LanguageType, opt => opt.Ignore())
				.ForMember(d => d.VehicleFeatureType, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.VehicleStatusType, xENT.VehicleStatusType>()
				.ForMember(d => d.Vehicles, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				// .ForMember(d => d.VehicleStatusTypeTranslations, opt => opt.Ignore()) // Reverse nav
			.ReverseMap();

			CreateMap<xDTO.VehicleStatusTypeTranslation, xENT.VehicleStatusTypeTranslation>()
				// .ForMember(d => d.LanguageType, opt => opt.Ignore())
				.ForMember(d => d.VehicleStatusType, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.VehicleType, xENT.VehicleType>()
				.ForMember(d => d.Vehicles, opt => opt.Ignore()) // Reverse nav -- Excluded navigation property per configuration.
				// .ForMember(d => d.VehicleTypeVehicleFeatureTypes, opt => opt.Ignore()) // Reverse nav
			.ReverseMap();

			CreateMap<xDTO.VehicleTypeVehicleFeatureType, xENT.VehicleTypeVehicleFeatureType>()
				.ForMember(d => d.VehicleFeatureType, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
				.ForMember(d => d.VehicleType, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
			.ReverseMap();

			CreateMap<xDTO.VehicleVehicleFeatureType, xENT.VehicleVehicleFeatureType>()
				.ForMember(d => d.Vehicle, opt => opt.Ignore()) //  -- Excluded navigation property per configuration.
				// .ForMember(d => d.VehicleFeatureType, opt => opt.Ignore())
			.ReverseMap();

		}
	}
}

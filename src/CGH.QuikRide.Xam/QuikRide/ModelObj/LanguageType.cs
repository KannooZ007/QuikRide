// <auto-generated> - Template:MvvmLightModelObject, Version:1.1, Id:c644a31c-7ebc-4383-bc7f-0ea7c5bf6ed4
using GalaSoft.MvvmLight;

namespace CGH.QuikRide.Xam.ModelObj.QR
{
	public partial class LanguageType : ObservableObject
	{
		public LanguageType()
		{
			FeedbackTypes = new System.Collections.Generic.List<FeedbackType>(); // Reverse Navigation
			GenderTypes = new System.Collections.Generic.List<GenderType>(); // Reverse Navigation
			NotificationTypes = new System.Collections.Generic.List<NotificationType>(); // Reverse Navigation
			ReservationCancellationReasonTypes = new System.Collections.Generic.List<ReservationCancellationReasonType>(); // Reverse Navigation
			ReservationRequestCancellationReasonTypes = new System.Collections.Generic.List<ReservationRequestCancellationReasonType>(); // Reverse Navigation
			ReservationRequestStatusTypes = new System.Collections.Generic.List<ReservationRequestStatusType>(); // Reverse Navigation
			ReservationStatusTypes = new System.Collections.Generic.List<ReservationStatusType>(); // Reverse Navigation
			RideServiceTypes = new System.Collections.Generic.List<RideServiceType>(); // Reverse Navigation
			VehicleFeatureTypes = new System.Collections.Generic.List<VehicleFeatureType>(); // Reverse Navigation
			VehicleStatusTypes = new System.Collections.Generic.List<VehicleStatusType>(); // Reverse Navigation
			VehicleTypes = new System.Collections.Generic.List<VehicleType>(); // Reverse Navigation

			InitializePartial();
		}

		private string _code;
		private string _createdBy;
		private System.DateTime _createdUtcDate;
		private int _dataVersion;
		private int _displayPriority;
		private string _displayText;
		private bool _isDeleted;
		private int? _languageCultureIdentifier;
		private int _languageTypeId;
		private string _modifiedBy;
		private System.DateTime _modifiedUtcDate;
		private string _nativeName;
		private string _threeLetterIsoLanguageName;
		private string _twoLetterIsoLanguageName;


		public string Code
		{
			get { return _code; }
			set
			{
				Set<string>(() => Code, ref _code, value);
				RunCustomLogicSetCode(value);
			}
		}

		public string CreatedBy
		{
			get { return _createdBy; }
			set
			{
				Set<string>(() => CreatedBy, ref _createdBy, value);
				RunCustomLogicSetCreatedBy(value);
			}
		}

		public System.DateTime CreatedUtcDate
		{
			get { return _createdUtcDate; }
			set
			{
				Set<System.DateTime>(() => CreatedUtcDate, ref _createdUtcDate, value);
				RunCustomLogicSetCreatedUtcDate(value);
			}
		}

		public int DataVersion
		{
			get { return _dataVersion; }
			set
			{
				Set<int>(() => DataVersion, ref _dataVersion, value);
				RunCustomLogicSetDataVersion(value);
			}
		}

		public int DisplayPriority
		{
			get { return _displayPriority; }
			set
			{
				Set<int>(() => DisplayPriority, ref _displayPriority, value);
				RunCustomLogicSetDisplayPriority(value);
			}
		}

		public string DisplayText
		{
			get { return _displayText; }
			set
			{
				Set<string>(() => DisplayText, ref _displayText, value);
				RunCustomLogicSetDisplayText(value);
			}
		}

		public bool IsDeleted
		{
			get { return _isDeleted; }
			set
			{
				Set<bool>(() => IsDeleted, ref _isDeleted, value);
				RunCustomLogicSetIsDeleted(value);
			}
		}

		public int? LanguageCultureIdentifier
		{
			get { return _languageCultureIdentifier; }
			set
			{
				Set<int?>(() => LanguageCultureIdentifier, ref _languageCultureIdentifier, value);
				RunCustomLogicSetLanguageCultureIdentifier(value);
			}
		}

		public int LanguageTypeId
		{
			get { return _languageTypeId; }
			set
			{
				Set<int>(() => LanguageTypeId, ref _languageTypeId, value);
				RunCustomLogicSetLanguageTypeId(value);
			}
		}

		public string ModifiedBy
		{
			get { return _modifiedBy; }
			set
			{
				Set<string>(() => ModifiedBy, ref _modifiedBy, value);
				RunCustomLogicSetModifiedBy(value);
			}
		}

		public System.DateTime ModifiedUtcDate
		{
			get { return _modifiedUtcDate; }
			set
			{
				Set<System.DateTime>(() => ModifiedUtcDate, ref _modifiedUtcDate, value);
				RunCustomLogicSetModifiedUtcDate(value);
			}
		}

		public string NativeName
		{
			get { return _nativeName; }
			set
			{
				Set<string>(() => NativeName, ref _nativeName, value);
				RunCustomLogicSetNativeName(value);
			}
		}

		public string ThreeLetterIsoLanguageName
		{
			get { return _threeLetterIsoLanguageName; }
			set
			{
				Set<string>(() => ThreeLetterIsoLanguageName, ref _threeLetterIsoLanguageName, value);
				RunCustomLogicSetThreeLetterIsoLanguageName(value);
			}
		}

		public string TwoLetterIsoLanguageName
		{
			get { return _twoLetterIsoLanguageName; }
			set
			{
				Set<string>(() => TwoLetterIsoLanguageName, ref _twoLetterIsoLanguageName, value);
				RunCustomLogicSetTwoLetterIsoLanguageName(value);
			}
		}

		public virtual System.Collections.Generic.IList<FeedbackType> FeedbackTypes { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<GenderType> GenderTypes { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<NotificationType> NotificationTypes { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<ReservationCancellationReasonType> ReservationCancellationReasonTypes { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<ReservationRequestCancellationReasonType> ReservationRequestCancellationReasonTypes { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<ReservationRequestStatusType> ReservationRequestStatusTypes { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<ReservationStatusType> ReservationStatusTypes { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<RideServiceType> RideServiceTypes { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<VehicleFeatureType> VehicleFeatureTypes { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<VehicleStatusType> VehicleStatusTypes { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<VehicleType> VehicleTypes { get; set; } // Many to many mapping


		partial void InitializePartial();

		#region RunCustomLogicSet

		partial void RunCustomLogicSetCode(string value);
		partial void RunCustomLogicSetCreatedBy(string value);
		partial void RunCustomLogicSetCreatedUtcDate(System.DateTime value);
		partial void RunCustomLogicSetDataVersion(int value);
		partial void RunCustomLogicSetDisplayPriority(int value);
		partial void RunCustomLogicSetDisplayText(string value);
		partial void RunCustomLogicSetIsDeleted(bool value);
		partial void RunCustomLogicSetLanguageCultureIdentifier(int? value);
		partial void RunCustomLogicSetLanguageTypeId(int value);
		partial void RunCustomLogicSetModifiedBy(string value);
		partial void RunCustomLogicSetModifiedUtcDate(System.DateTime value);
		partial void RunCustomLogicSetNativeName(string value);
		partial void RunCustomLogicSetThreeLetterIsoLanguageName(string value);
		partial void RunCustomLogicSetTwoLetterIsoLanguageName(string value);

		#endregion RunCustomLogicSet

	}
}

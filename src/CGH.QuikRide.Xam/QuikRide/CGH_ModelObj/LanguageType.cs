// <auto-generated> - Template:MvvmLightModelObject, Version:1.1, Id:c644a31c-7ebc-4383-bc7f-0ea7c5bf6ed4
using GalaSoft.MvvmLight;

namespace CGH.QuikRide.Xam.ModelObj.QR
{
	public partial class LanguageType : ObservableObject
	{
		public LanguageType()
		{
			BarcodeTypeTranslations = new System.Collections.Generic.List<BarcodeTypeTranslation>(); // Reverse Navigation
			BusRouteTranslations = new System.Collections.Generic.List<BusRouteTranslation>(); // Reverse Navigation
			FeedbackInitiatorTypeTranslations = new System.Collections.Generic.List<FeedbackInitiatorTypeTranslation>(); // Reverse Navigation
			FeedbackTypeTranslations = new System.Collections.Generic.List<FeedbackTypeTranslation>(); // Reverse Navigation
			GenderTypeTranslations = new System.Collections.Generic.List<GenderTypeTranslation>(); // Reverse Navigation
			HolidayTranslations = new System.Collections.Generic.List<HolidayTranslation>(); // Reverse Navigation
			LocationTypeTranslations = new System.Collections.Generic.List<LocationTypeTranslation>(); // Reverse Navigation
			NotificationTypeTranslations = new System.Collections.Generic.List<NotificationTypeTranslation>(); // Reverse Navigation
			ReservationCancellationReasonTypeTranslations = new System.Collections.Generic.List<ReservationCancellationReasonTypeTranslation>(); // Reverse Navigation
			ReservationRequestCancellationReasonTypeTranslations = new System.Collections.Generic.List<ReservationRequestCancellationReasonTypeTranslation>(); // Reverse Navigation
			ReservationRequestStatusTypeTranslations = new System.Collections.Generic.List<ReservationRequestStatusTypeTranslation>(); // Reverse Navigation
			ReservationStatusTypeTranslations = new System.Collections.Generic.List<ReservationStatusTypeTranslation>(); // Reverse Navigation
			RideServiceTypeTranslations = new System.Collections.Generic.List<RideServiceTypeTranslation>(); // Reverse Navigation
			Users = new System.Collections.Generic.List<User>(); // Reverse Navigation
			UserRewardAccountTransactionTypeTranslations = new System.Collections.Generic.List<UserRewardAccountTransactionTypeTranslation>(); // Reverse Navigation
			VehicleFeatureTypeTranslations = new System.Collections.Generic.List<VehicleFeatureTypeTranslation>(); // Reverse Navigation
			VehicleStatusTypeTranslations = new System.Collections.Generic.List<VehicleStatusTypeTranslation>(); // Reverse Navigation

			InitializePartial();
		}

		private string _code;
		private string _createdBy;
		private System.DateTime _createdUtcDate;
		private int _dataVersion;
		private int _displayPriority;
		private string _displayText;
		private bool _isDeleted;
		private int? _languageCultureIdentifier;
		private int _languageTypeId;
		private string _modifiedBy;
		private System.DateTime _modifiedUtcDate;
		private string _nativeName;
		private string _threeLetterIsoLanguageName;
		private string _twoLetterIsoLanguageName;


		public string Code
		{
			get { return _code; }
			set
			{
				Set<string>(() => Code, ref _code, value);
				RunCustomLogicSetCode(value);
			}
		}

		public string CreatedBy
		{
			get { return _createdBy; }
			set
			{
				Set<string>(() => CreatedBy, ref _createdBy, value);
				RunCustomLogicSetCreatedBy(value);
			}
		}

		public System.DateTime CreatedUtcDate
		{
			get { return _createdUtcDate; }
			set
			{
				Set<System.DateTime>(() => CreatedUtcDate, ref _createdUtcDate, value);
				RunCustomLogicSetCreatedUtcDate(value);
			}
		}

		public int DataVersion
		{
			get { return _dataVersion; }
			set
			{
				Set<int>(() => DataVersion, ref _dataVersion, value);
				RunCustomLogicSetDataVersion(value);
			}
		}

		public int DisplayPriority
		{
			get { return _displayPriority; }
			set
			{
				Set<int>(() => DisplayPriority, ref _displayPriority, value);
				RunCustomLogicSetDisplayPriority(value);
			}
		}

		public string DisplayText
		{
			get { return _displayText; }
			set
			{
				Set<string>(() => DisplayText, ref _displayText, value);
				RunCustomLogicSetDisplayText(value);
			}
		}

		public bool IsDeleted
		{
			get { return _isDeleted; }
			set
			{
				Set<bool>(() => IsDeleted, ref _isDeleted, value);
				RunCustomLogicSetIsDeleted(value);
			}
		}

		public int? LanguageCultureIdentifier
		{
			get { return _languageCultureIdentifier; }
			set
			{
				Set<int?>(() => LanguageCultureIdentifier, ref _languageCultureIdentifier, value);
				RunCustomLogicSetLanguageCultureIdentifier(value);
			}
		}

		public int LanguageTypeId
		{
			get { return _languageTypeId; }
			set
			{
				Set<int>(() => LanguageTypeId, ref _languageTypeId, value);
				RunCustomLogicSetLanguageTypeId(value);
			}
		}

		public string ModifiedBy
		{
			get { return _modifiedBy; }
			set
			{
				Set<string>(() => ModifiedBy, ref _modifiedBy, value);
				RunCustomLogicSetModifiedBy(value);
			}
		}

		public System.DateTime ModifiedUtcDate
		{
			get { return _modifiedUtcDate; }
			set
			{
				Set<System.DateTime>(() => ModifiedUtcDate, ref _modifiedUtcDate, value);
				RunCustomLogicSetModifiedUtcDate(value);
			}
		}

		public string NativeName
		{
			get { return _nativeName; }
			set
			{
				Set<string>(() => NativeName, ref _nativeName, value);
				RunCustomLogicSetNativeName(value);
			}
		}

		public string ThreeLetterIsoLanguageName
		{
			get { return _threeLetterIsoLanguageName; }
			set
			{
				Set<string>(() => ThreeLetterIsoLanguageName, ref _threeLetterIsoLanguageName, value);
				RunCustomLogicSetThreeLetterIsoLanguageName(value);
			}
		}

		public string TwoLetterIsoLanguageName
		{
			get { return _twoLetterIsoLanguageName; }
			set
			{
				Set<string>(() => TwoLetterIsoLanguageName, ref _twoLetterIsoLanguageName, value);
				RunCustomLogicSetTwoLetterIsoLanguageName(value);
			}
		}

		public virtual System.Collections.Generic.IList<BarcodeTypeTranslation> BarcodeTypeTranslations { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<BusRouteTranslation> BusRouteTranslations { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<FeedbackInitiatorTypeTranslation> FeedbackInitiatorTypeTranslations { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<FeedbackTypeTranslation> FeedbackTypeTranslations { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<GenderTypeTranslation> GenderTypeTranslations { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<HolidayTranslation> HolidayTranslations { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<LocationTypeTranslation> LocationTypeTranslations { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<NotificationTypeTranslation> NotificationTypeTranslations { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<ReservationCancellationReasonTypeTranslation> ReservationCancellationReasonTypeTranslations { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<ReservationRequestCancellationReasonTypeTranslation> ReservationRequestCancellationReasonTypeTranslations { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<ReservationRequestStatusTypeTranslation> ReservationRequestStatusTypeTranslations { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<ReservationStatusTypeTranslation> ReservationStatusTypeTranslations { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<RideServiceTypeTranslation> RideServiceTypeTranslations { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<User> Users { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<UserRewardAccountTransactionTypeTranslation> UserRewardAccountTransactionTypeTranslations { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<VehicleFeatureTypeTranslation> VehicleFeatureTypeTranslations { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<VehicleStatusTypeTranslation> VehicleStatusTypeTranslations { get; set; } // Many to many mapping


		partial void InitializePartial();

		#region RunCustomLogicSet

		partial void RunCustomLogicSetCode(string value);
		partial void RunCustomLogicSetCreatedBy(string value);
		partial void RunCustomLogicSetCreatedUtcDate(System.DateTime value);
		partial void RunCustomLogicSetDataVersion(int value);
		partial void RunCustomLogicSetDisplayPriority(int value);
		partial void RunCustomLogicSetDisplayText(string value);
		partial void RunCustomLogicSetIsDeleted(bool value);
		partial void RunCustomLogicSetLanguageCultureIdentifier(int? value);
		partial void RunCustomLogicSetLanguageTypeId(int value);
		partial void RunCustomLogicSetModifiedBy(string value);
		partial void RunCustomLogicSetModifiedUtcDate(System.DateTime value);
		partial void RunCustomLogicSetNativeName(string value);
		partial void RunCustomLogicSetThreeLetterIsoLanguageName(string value);
		partial void RunCustomLogicSetTwoLetterIsoLanguageName(string value);

		#endregion RunCustomLogicSet

	}
}

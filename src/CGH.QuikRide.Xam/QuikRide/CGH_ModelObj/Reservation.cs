// <auto-generated> - Template:MvvmLightModelObject, Version:1.1, Id:c644a31c-7ebc-4383-bc7f-0ea7c5bf6ed4
using GalaSoft.MvvmLight;

namespace CGH.QuikRide.Xam.ModelObj.QR
{
	public partial class Reservation : ObservableObject
	{
		public Reservation()
		{
			ReservationRequests = new System.Collections.Generic.List<ReservationRequest>(); // Reverse Navigation

			InitializePartial();
		}

		private string _createdBy;
		private System.DateTime _createdUtcDate;
		private int _dataVersion;
		private System.Guid _destinationLocationId;
		private bool _isDeleted;
		private string _modifiedBy;
		private System.DateTime _modifiedUtcDate;
		private int _numberOfAdults;
		private int _numberOfBabies;
		private int _numberOfBikes;
		private int _numberOfChildren;
		private int _numberOfWheelchairs;
		private bool _personalCareAttendantIncluded;
		private System.Guid _pickUpLocationId;
		private int? _reservationCancellationReasonId;
		private System.Guid _reservationId;
		private int _reservationRequestOptionId;
		private int _reservationStatusTypeId;
		private int _userId;


		public string CreatedBy
		{
			get { return _createdBy; }
			set
			{
				Set<string>(() => CreatedBy, ref _createdBy, value);
				RunCustomLogicSetCreatedBy(value);
			}
		}

		public System.DateTime CreatedUtcDate
		{
			get { return _createdUtcDate; }
			set
			{
				Set<System.DateTime>(() => CreatedUtcDate, ref _createdUtcDate, value);
				RunCustomLogicSetCreatedUtcDate(value);
			}
		}

		public int DataVersion
		{
			get { return _dataVersion; }
			set
			{
				Set<int>(() => DataVersion, ref _dataVersion, value);
				RunCustomLogicSetDataVersion(value);
			}
		}

		public System.Guid DestinationLocationId
		{
			get { return _destinationLocationId; }
			set
			{
				Set<System.Guid>(() => DestinationLocationId, ref _destinationLocationId, value);
				RunCustomLogicSetDestinationLocationId(value);
			}
		}

		public bool IsDeleted
		{
			get { return _isDeleted; }
			set
			{
				Set<bool>(() => IsDeleted, ref _isDeleted, value);
				RunCustomLogicSetIsDeleted(value);
			}
		}

		public string ModifiedBy
		{
			get { return _modifiedBy; }
			set
			{
				Set<string>(() => ModifiedBy, ref _modifiedBy, value);
				RunCustomLogicSetModifiedBy(value);
			}
		}

		public System.DateTime ModifiedUtcDate
		{
			get { return _modifiedUtcDate; }
			set
			{
				Set<System.DateTime>(() => ModifiedUtcDate, ref _modifiedUtcDate, value);
				RunCustomLogicSetModifiedUtcDate(value);
			}
		}

		public int NumberOfAdults
		{
			get { return _numberOfAdults; }
			set
			{
				Set<int>(() => NumberOfAdults, ref _numberOfAdults, value);
				RunCustomLogicSetNumberOfAdults(value);
			}
		}

		public int NumberOfBabies
		{
			get { return _numberOfBabies; }
			set
			{
				Set<int>(() => NumberOfBabies, ref _numberOfBabies, value);
				RunCustomLogicSetNumberOfBabies(value);
			}
		}

		public int NumberOfBikes
		{
			get { return _numberOfBikes; }
			set
			{
				Set<int>(() => NumberOfBikes, ref _numberOfBikes, value);
				RunCustomLogicSetNumberOfBikes(value);
			}
		}

		public int NumberOfChildren
		{
			get { return _numberOfChildren; }
			set
			{
				Set<int>(() => NumberOfChildren, ref _numberOfChildren, value);
				RunCustomLogicSetNumberOfChildren(value);
			}
		}

		public int NumberOfWheelchairs
		{
			get { return _numberOfWheelchairs; }
			set
			{
				Set<int>(() => NumberOfWheelchairs, ref _numberOfWheelchairs, value);
				RunCustomLogicSetNumberOfWheelchairs(value);
			}
		}

		public bool PersonalCareAttendantIncluded
		{
			get { return _personalCareAttendantIncluded; }
			set
			{
				Set<bool>(() => PersonalCareAttendantIncluded, ref _personalCareAttendantIncluded, value);
				RunCustomLogicSetPersonalCareAttendantIncluded(value);
			}
		}

		public System.Guid PickUpLocationId
		{
			get { return _pickUpLocationId; }
			set
			{
				Set<System.Guid>(() => PickUpLocationId, ref _pickUpLocationId, value);
				RunCustomLogicSetPickUpLocationId(value);
			}
		}

		public int? ReservationCancellationReasonId
		{
			get { return _reservationCancellationReasonId; }
			set
			{
				Set<int?>(() => ReservationCancellationReasonId, ref _reservationCancellationReasonId, value);
				RunCustomLogicSetReservationCancellationReasonId(value);
			}
		}

		public System.Guid ReservationId
		{
			get { return _reservationId; }
			set
			{
				Set<System.Guid>(() => ReservationId, ref _reservationId, value);
				RunCustomLogicSetReservationId(value);
			}
		}

		public int ReservationRequestOptionId
		{
			get { return _reservationRequestOptionId; }
			set
			{
				Set<int>(() => ReservationRequestOptionId, ref _reservationRequestOptionId, value);
				RunCustomLogicSetReservationRequestOptionId(value);
			}
		}

		public int ReservationStatusTypeId
		{
			get { return _reservationStatusTypeId; }
			set
			{
				Set<int>(() => ReservationStatusTypeId, ref _reservationStatusTypeId, value);
				RunCustomLogicSetReservationStatusTypeId(value);
			}
		}

		public int UserId
		{
			get { return _userId; }
			set
			{
				Set<int>(() => UserId, ref _userId, value);
				RunCustomLogicSetUserId(value);
			}
		}

		public virtual System.Collections.Generic.IList<ReservationRequest> ReservationRequests { get; set; } // Many to many mapping
		public virtual Location Location { get; set; } 
		public virtual ReservationCancellationReasonType ReservationCancellationReasonType { get; set; } 
		public virtual ReservationRequestOption ReservationRequestOption { get; set; } 
		public virtual User User { get; set; } 


		partial void InitializePartial();

		#region RunCustomLogicSet

		partial void RunCustomLogicSetCreatedBy(string value);
		partial void RunCustomLogicSetCreatedUtcDate(System.DateTime value);
		partial void RunCustomLogicSetDataVersion(int value);
		partial void RunCustomLogicSetDestinationLocationId(System.Guid value);
		partial void RunCustomLogicSetIsDeleted(bool value);
		partial void RunCustomLogicSetModifiedBy(string value);
		partial void RunCustomLogicSetModifiedUtcDate(System.DateTime value);
		partial void RunCustomLogicSetNumberOfAdults(int value);
		partial void RunCustomLogicSetNumberOfBabies(int value);
		partial void RunCustomLogicSetNumberOfBikes(int value);
		partial void RunCustomLogicSetNumberOfChildren(int value);
		partial void RunCustomLogicSetNumberOfWheelchairs(int value);
		partial void RunCustomLogicSetPersonalCareAttendantIncluded(bool value);
		partial void RunCustomLogicSetPickUpLocationId(System.Guid value);
		partial void RunCustomLogicSetReservationCancellationReasonId(int? value);
		partial void RunCustomLogicSetReservationId(System.Guid value);
		partial void RunCustomLogicSetReservationRequestOptionId(int value);
		partial void RunCustomLogicSetReservationStatusTypeId(int value);
		partial void RunCustomLogicSetUserId(int value);

		#endregion RunCustomLogicSet

	}
}

// <auto-generated> - Template:ModelsBackedByDto, Version:1.1, Id:f1539c0d-024f-4b1f-b346-132cdd9dd31f
using CodeGenHero.Logging;
using CodeGenHero.DataService;
using System;
using System.Collections.Generic;
using System.Linq;
using CGH.QuikRide.API.Client.Interface;
using CGH.QuikRide.Model.QR.Interface;
using xDTO = CGH.QuikRide.DTO.QR;

namespace CGH.QuikRide.Model.QR
{

	public class LoadRequestUserRewardAccountTransactionTypeTranslation : EventArgs
	{
		public LoadRequestUserRewardAccountTransactionTypeTranslation(string propertyNameRequestingLoad)
		{
			PropertyNameRequestingLoad = propertyNameRequestingLoad;
		}

		public string PropertyNameRequestingLoad { get; set; }
	}


	public partial class UserRewardAccountTransactionTypeTranslation : BaseModel<IWebApiDataServiceQR>, IUserRewardAccountTransactionTypeTranslation
	{
		public event EventHandler<LoadRequestUserRewardAccountTransactionTypeTranslation> OnLazyLoadRequest = delegate { }; // Empty delegate. Thus we are sure that value is always != null because no one outside of the class can change it.
		private xDTO.UserRewardAccountTransactionTypeTranslation _dto = null;

		public UserRewardAccountTransactionTypeTranslation(ILoggingService log, IDataService<IWebApiDataServiceQR> dataService) : base(log, dataService)
		{
			_dto = new xDTO.UserRewardAccountTransactionTypeTranslation();
			OnLazyLoadRequest += HandleLazyLoadRequest;
		}

		public UserRewardAccountTransactionTypeTranslation(ILoggingService log, IDataService<IWebApiDataServiceQR> dataService, xDTO.UserRewardAccountTransactionTypeTranslation dto) : this(log, dataService)
		{
			_dto = dto;
		}


		public virtual string CreatedBy { get { return _dto.CreatedBy; } }
		public virtual System.DateTime CreatedUtcDate { get { return _dto.CreatedUtcDate; } }
		public virtual int DataVersion { get { return _dto.DataVersion; } }
		public virtual string Description { get { return _dto.Description; } }
		public virtual int DisplayPriority { get { return _dto.DisplayPriority; } }
		public virtual bool IsDeleted { get { return _dto.IsDeleted; } }
		public virtual int LanguageTypeId { get { return _dto.LanguageTypeId; } }
		public virtual string ModifiedBy { get { return _dto.ModifiedBy; } }
		public virtual System.DateTime ModifiedUtcDate { get { return _dto.ModifiedUtcDate; } }
		public virtual int UserRewardAccountTransactionTypeId { get { return _dto.UserRewardAccountTransactionTypeId; } }
		public virtual int UserRewardAccountTransactionTypeTranslationId { get { return _dto.UserRewardAccountTransactionTypeTranslationId; } }
		public virtual string Value { get { return _dto.Value; } }

		private ILanguageType _languageType = null; // Foreign Key
		private IUserRewardAccountTransactionType _userRewardAccountTransactionType = null; // Foreign Key


		public virtual ILanguageType LanguageType
		{
			get
			{
				if (_languageType == null && _dto != null && _dto.LanguageType != null)
				{
					_languageType = new LanguageType(Log, DataService, _dto.LanguageType);
				}

				return _languageType;
			}
		}

		public virtual IUserRewardAccountTransactionType UserRewardAccountTransactionType
		{
			get
			{
				if (_userRewardAccountTransactionType == null)
				{
					OnLazyLoadRequest(this, new LoadRequestUserRewardAccountTransactionTypeTranslation(nameof(UserRewardAccountTransactionType)));
				}

				return _userRewardAccountTransactionType;
			}
		}



	}
}

// <auto-generated> - Template:ModelsBackedByDto, Version:1.1, Id:f1539c0d-024f-4b1f-b346-132cdd9dd31f
using CodeGenHero.Logging;
using CodeGenHero.DataService;
using System;
using System.Collections.Generic;
using System.Linq;
using CGH.QuikRide.API.Client.Interface;
using CGH.QuikRide.Model.QR.Interface;
using xDTO = CGH.QuikRide.DTO.QR;

namespace CGH.QuikRide.Model.QR
{

	public class LoadRequestBarcodeType : EventArgs
	{
		public LoadRequestBarcodeType(string propertyNameRequestingLoad)
		{
			PropertyNameRequestingLoad = propertyNameRequestingLoad;
		}

		public string PropertyNameRequestingLoad { get; set; }
	}


	public partial class BarcodeType : BaseModel<IWebApiDataServiceQR>, IBarcodeType
	{
		public event EventHandler<LoadRequestBarcodeType> OnLazyLoadRequest = delegate { }; // Empty delegate. Thus we are sure that value is always != null because no one outside of the class can change it.
		private xDTO.BarcodeType _dto = null;

		public BarcodeType(ILoggingService log, IDataService<IWebApiDataServiceQR> dataService) : base(log, dataService)
		{
			_dto = new xDTO.BarcodeType();
			OnLazyLoadRequest += HandleLazyLoadRequest;
		}

		public BarcodeType(ILoggingService log, IDataService<IWebApiDataServiceQR> dataService, xDTO.BarcodeType dto) : this(log, dataService)
		{
			_dto = dto;
		}


		public virtual int BarcodeTypeId { get { return _dto.BarcodeTypeId; } }
		public virtual string Code { get { return _dto.Code; } }
		public virtual string CreatedBy { get { return _dto.CreatedBy; } }
		public virtual System.DateTime CreatedUtcDate { get { return _dto.CreatedUtcDate; } }
		public virtual int DataVersion { get { return _dto.DataVersion; } }
		public virtual bool IsDeleted { get { return _dto.IsDeleted; } }
		public virtual string ModifiedBy { get { return _dto.ModifiedBy; } }
		public virtual System.DateTime ModifiedUtcDate { get { return _dto.ModifiedUtcDate; } }

		private List<IBarcode> _barcodes = null; // Reverse Navigation
		private List<IBarcodeTypeTranslation> _barcodeTypeTranslations = null; // Reverse Navigation


		public virtual List<IBarcode> Barcodes
		{
			get
			{
				if (_barcodes == null)
				{
					OnLazyLoadRequest(this, new LoadRequestBarcodeType(nameof(Barcodes)));
				}

				return _barcodes;
			}
		}

		public virtual List<IBarcodeTypeTranslation> BarcodeTypeTranslations
		{
			get
			{
				if (_barcodeTypeTranslations == null && _dto != null)
				{	// The core DTO object is loaded, but this property is not loaded.
					if (_dto.BarcodeTypeTranslations != null)
					{	// The core DTO object has data for this property, load it into the model.
						_barcodeTypeTranslations = new List<IBarcodeTypeTranslation>();
						foreach (var dtoItem in _dto.BarcodeTypeTranslations)
						{
							_barcodeTypeTranslations.Add(new BarcodeTypeTranslation(Log, DataService, dtoItem));
						}
					}
					else
					{	// Trigger the load data request - The core DTO object is loaded and does not have data for this property.
						OnLazyLoadRequest(this, new LoadRequestBarcodeType(nameof(BarcodeTypeTranslations)));
					}
				}

				return _barcodeTypeTranslations;
			}
		}



	}
}

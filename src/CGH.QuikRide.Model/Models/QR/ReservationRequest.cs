// <auto-generated> - Template:ModelsBackedByDto, Version:1.1, Id:f1539c0d-024f-4b1f-b346-132cdd9dd31f
using CodeGenHero.Logging;
using CodeGenHero.DataService;
using System;
using System.Collections.Generic;
using System.Linq;
using CGH.QuikRide.API.Client.Interface;
using CGH.QuikRide.Model.QR.Interface;
using xDTO = CGH.QuikRide.DTO.QR;

namespace CGH.QuikRide.Model.QR
{

	public class LoadRequestReservationRequest : EventArgs
	{
		public LoadRequestReservationRequest(string propertyNameRequestingLoad)
		{
			PropertyNameRequestingLoad = propertyNameRequestingLoad;
		}

		public string PropertyNameRequestingLoad { get; set; }
	}


	public partial class ReservationRequest : BaseModel<IWebApiDataServiceQR>, IReservationRequest
	{
		public event EventHandler<LoadRequestReservationRequest> OnLazyLoadRequest = delegate { }; // Empty delegate. Thus we are sure that value is always != null because no one outside of the class can change it.
		private xDTO.ReservationRequest _dto = null;

		public ReservationRequest(ILoggingService log, IDataService<IWebApiDataServiceQR> dataService) : base(log, dataService)
		{
			_dto = new xDTO.ReservationRequest();
			OnLazyLoadRequest += HandleLazyLoadRequest;
		}

		public ReservationRequest(ILoggingService log, IDataService<IWebApiDataServiceQR> dataService, xDTO.ReservationRequest dto) : this(log, dataService)
		{
			_dto = dto;
		}


		public virtual string CreatedBy { get { return _dto.CreatedBy; } }
		public virtual System.DateTime CreatedUtcDate { get { return _dto.CreatedUtcDate; } }
		public virtual int DataVersion { get { return _dto.DataVersion; } }
		public virtual System.Guid DestinationLocationId { get { return _dto.DestinationLocationId; } }
		public virtual bool IsDeleted { get { return _dto.IsDeleted; } }
		public virtual string ModifiedBy { get { return _dto.ModifiedBy; } }
		public virtual System.DateTime ModifiedUtcDate { get { return _dto.ModifiedUtcDate; } }
		public virtual int NumberOfAdults { get { return _dto.NumberOfAdults; } }
		public virtual int NumberOfBabies { get { return _dto.NumberOfBabies; } }
		public virtual int? NumberOfBikes { get { return _dto.NumberOfBikes; } }
		public virtual int NumberOfChildren { get { return _dto.NumberOfChildren; } }
		public virtual int? NumberOfWheelchairs { get { return _dto.NumberOfWheelchairs; } }
		public virtual bool PassengerRequiresAssistance { get { return _dto.PassengerRequiresAssistance; } }
		public virtual bool PersonalCareAttendantIncluded { get { return _dto.PersonalCareAttendantIncluded; } }
		public virtual System.Guid PickupLocationId { get { return _dto.PickupLocationId; } }
		public virtual System.Guid? ReplacesReservationId { get { return _dto.ReplacesReservationId; } }
		public virtual System.DateTime? RequestedArrivalEnd { get { return _dto.RequestedArrivalEnd; } }
		public virtual System.DateTime? RequestedArrivalStart { get { return _dto.RequestedArrivalStart; } }
		public virtual System.DateTime? RequestedPickupEnd { get { return _dto.RequestedPickupEnd; } }
		public virtual System.DateTime? RequestedPickupStart { get { return _dto.RequestedPickupStart; } }
		public virtual System.Guid? ReservationId { get { return _dto.ReservationId; } }
		public virtual int? ReservationRequestCancellationReasonTypeId { get { return _dto.ReservationRequestCancellationReasonTypeId; } }
		public virtual System.Guid ReservationRequestId { get { return _dto.ReservationRequestId; } }
		public virtual int ReservationRequestStatusTypeId { get { return _dto.ReservationRequestStatusTypeId; } }
		public virtual int UserId { get { return _dto.UserId; } }

		private ILocation _destinationLocation = null; // Foreign Key
		private ILocation _pickupLocation = null; // Foreign Key
		private IReservation _reservation = null; // Foreign Key
		private IReservationRequestCancellationReasonType _reservationRequestCancellationReasonType = null; // Foreign Key
		private IReservationRequestStatusType _reservationRequestStatusType = null; // Foreign Key
		private IUser _user = null; // Foreign Key


		public virtual ILocation DestinationLocation
		{
			get
			{
				if (_destinationLocation == null && _dto != null && _dto.DestinationLocation != null)
				{
					_destinationLocation = new Location(Log, DataService, _dto.DestinationLocation);
				}

				return _destinationLocation;
			}
		}

		public virtual ILocation PickupLocation
		{
			get
			{
				if (_pickupLocation == null && _dto != null && _dto.PickupLocation != null)
				{
					_pickupLocation = new Location(Log, DataService, _dto.PickupLocation);
				}

				return _pickupLocation;
			}
		}

		public virtual IReservation Reservation
		{
			get
			{
				if (_reservation == null && _dto != null && _dto.Reservation != null)
				{
					_reservation = new Reservation(Log, DataService, _dto.Reservation);
				}

				return _reservation;
			}
		}

		public virtual IReservationRequestCancellationReasonType ReservationRequestCancellationReasonType
		{
			get
			{
				if (_reservationRequestCancellationReasonType == null && _dto != null && _dto.ReservationRequestCancellationReasonType != null)
				{
					_reservationRequestCancellationReasonType = new ReservationRequestCancellationReasonType(Log, DataService, _dto.ReservationRequestCancellationReasonType);
				}

				return _reservationRequestCancellationReasonType;
			}
		}

		public virtual IReservationRequestStatusType ReservationRequestStatusType
		{
			get
			{
				if (_reservationRequestStatusType == null && _dto != null && _dto.ReservationRequestStatusType != null)
				{
					_reservationRequestStatusType = new ReservationRequestStatusType(Log, DataService, _dto.ReservationRequestStatusType);
				}

				return _reservationRequestStatusType;
			}
		}

		public virtual IUser User
		{
			get
			{
				if (_user == null)
				{
					OnLazyLoadRequest(this, new LoadRequestReservationRequest(nameof(User)));
				}

				return _user;
			}
		}



	}
}

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CGH.QuikRide.Repository.Entities.QR
{

    // Ride
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class Ride
    {
        public System.Guid RideId { get; set; } // RideId (Primary key)
        public System.DateTime? Start { get; set; } // Start
        public double? StartLatitude { get; set; } // StartLatitude
        public double? StartLongitude { get; set; } // StartLongitude
        public System.DateTime? End { get; set; } // End
        public double? EndLatitude { get; set; } // EndLatitude
        public double? EndLongitude { get; set; } // EndLongitude
        public int VehicleId { get; set; } // VehicleId
        public int DriverId { get; set; } // DriverId
        public int UserId { get; set; } // UserId
        public int? DurationInSeconds { get; set; } // DurationInSeconds
        public int? GeoDistance { get; set; } // GeoDistance
        public int DataVersion { get; set; } // DataVersion
        public System.DateTime CreatedUtcDate { get; set; } // CreatedUtcDate
        public string CreatedBy { get; set; } // CreatedBy (length: 200)
        public System.DateTime ModifiedUtcDate { get; set; } // ModifiedUtcDate
        public string ModifiedBy { get; set; } // ModifiedBy (length: 200)
        public bool IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child RidePositions where [RidePosition].[RideId] point to this entity (FK_RidePosition_Ride)
        /// </summary>
        public System.Collections.Generic.ICollection<RidePosition> RidePositions { get; set; } // RidePosition.FK_RidePosition_Ride

        // Foreign keys

        /// <summary>
        /// Parent Driver pointed by [Ride].([DriverId]) (FK_Ride_Driver)
        /// </summary>
        public Driver Driver { get; set; } // FK_Ride_Driver

        /// <summary>
        /// Parent User pointed by [Ride].([UserId]) (FK_Ride_Users)
        /// </summary>
        public User User { get; set; } // FK_Ride_Users

        /// <summary>
        /// Parent Vehicle pointed by [Ride].([VehicleId]) (FK_Ride_Vehicle)
        /// </summary>
        public Vehicle Vehicle { get; set; } // FK_Ride_Vehicle

        public Ride()
        {
            DataVersion = 1;
            CreatedUtcDate = System.DateTime.UtcNow;
            ModifiedUtcDate = System.DateTime.UtcNow;
            IsDeleted = false;
            RidePositions = new System.Collections.Generic.List<RidePosition>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>

// <auto-generated> - Template:MvvmLightModelObject, Version:1.1, Id:c644a31c-7ebc-4383-bc7f-0ea7c5bf6ed4
using GalaSoft.MvvmLight;

namespace CGH.QuikRide.Xam.ModelObj.QR
{
	public partial class VehicleType : ObservableObject
	{
		public VehicleType()
		{
			Vehicles = new System.Collections.Generic.List<Vehicle>(); // Reverse Navigation
			VehicleTypeVehicleFeatureTypes = new System.Collections.Generic.List<VehicleTypeVehicleFeatureType>(); // Reverse Navigation

			InitializePartial();
		}

		private int? _capacity;
		private string _code;
		private string _createdBy;
		private System.DateTime _createdUtcDate;
		private int _dataVersion;
		private string _description;
		private int _displayPriority;
		private string _displayText;
		private double? _frontOverhangInFeet;
		private double? _groundClearanceInFeet;
		private double? _heightInFeet;
		private bool _isDeleted;
		private double? _lengthInFeetMax;
		private double? _lengthInFeetMin;
		private double? _lengthWithBumpers;
		private string _modifiedBy;
		private System.DateTime _modifiedUtcDate;
		private double? _rearOverhangInFeet;
		private int _vehicleTypeId;
		private double? _wheelbaseInFeet;
		private double? _widthInFeet;
		private double? _widthWithMirrorsInFeet;


		public int? Capacity
		{
			get { return _capacity; }
			set
			{
				Set<int?>(() => Capacity, ref _capacity, value);
				RunCustomLogicSetCapacity(value);
			}
		}

		public string Code
		{
			get { return _code; }
			set
			{
				Set<string>(() => Code, ref _code, value);
				RunCustomLogicSetCode(value);
			}
		}

		public string CreatedBy
		{
			get { return _createdBy; }
			set
			{
				Set<string>(() => CreatedBy, ref _createdBy, value);
				RunCustomLogicSetCreatedBy(value);
			}
		}

		public System.DateTime CreatedUtcDate
		{
			get { return _createdUtcDate; }
			set
			{
				Set<System.DateTime>(() => CreatedUtcDate, ref _createdUtcDate, value);
				RunCustomLogicSetCreatedUtcDate(value);
			}
		}

		public int DataVersion
		{
			get { return _dataVersion; }
			set
			{
				Set<int>(() => DataVersion, ref _dataVersion, value);
				RunCustomLogicSetDataVersion(value);
			}
		}

		public string Description
		{
			get { return _description; }
			set
			{
				Set<string>(() => Description, ref _description, value);
				RunCustomLogicSetDescription(value);
			}
		}

		public int DisplayPriority
		{
			get { return _displayPriority; }
			set
			{
				Set<int>(() => DisplayPriority, ref _displayPriority, value);
				RunCustomLogicSetDisplayPriority(value);
			}
		}

		public string DisplayText
		{
			get { return _displayText; }
			set
			{
				Set<string>(() => DisplayText, ref _displayText, value);
				RunCustomLogicSetDisplayText(value);
			}
		}

		public double? FrontOverhangInFeet
		{
			get { return _frontOverhangInFeet; }
			set
			{
				Set<double?>(() => FrontOverhangInFeet, ref _frontOverhangInFeet, value);
				RunCustomLogicSetFrontOverhangInFeet(value);
			}
		}

		public double? GroundClearanceInFeet
		{
			get { return _groundClearanceInFeet; }
			set
			{
				Set<double?>(() => GroundClearanceInFeet, ref _groundClearanceInFeet, value);
				RunCustomLogicSetGroundClearanceInFeet(value);
			}
		}

		public double? HeightInFeet
		{
			get { return _heightInFeet; }
			set
			{
				Set<double?>(() => HeightInFeet, ref _heightInFeet, value);
				RunCustomLogicSetHeightInFeet(value);
			}
		}

		public bool IsDeleted
		{
			get { return _isDeleted; }
			set
			{
				Set<bool>(() => IsDeleted, ref _isDeleted, value);
				RunCustomLogicSetIsDeleted(value);
			}
		}

		public double? LengthInFeetMax
		{
			get { return _lengthInFeetMax; }
			set
			{
				Set<double?>(() => LengthInFeetMax, ref _lengthInFeetMax, value);
				RunCustomLogicSetLengthInFeetMax(value);
			}
		}

		public double? LengthInFeetMin
		{
			get { return _lengthInFeetMin; }
			set
			{
				Set<double?>(() => LengthInFeetMin, ref _lengthInFeetMin, value);
				RunCustomLogicSetLengthInFeetMin(value);
			}
		}

		public double? LengthWithBumpers
		{
			get { return _lengthWithBumpers; }
			set
			{
				Set<double?>(() => LengthWithBumpers, ref _lengthWithBumpers, value);
				RunCustomLogicSetLengthWithBumpers(value);
			}
		}

		public string ModifiedBy
		{
			get { return _modifiedBy; }
			set
			{
				Set<string>(() => ModifiedBy, ref _modifiedBy, value);
				RunCustomLogicSetModifiedBy(value);
			}
		}

		public System.DateTime ModifiedUtcDate
		{
			get { return _modifiedUtcDate; }
			set
			{
				Set<System.DateTime>(() => ModifiedUtcDate, ref _modifiedUtcDate, value);
				RunCustomLogicSetModifiedUtcDate(value);
			}
		}

		public double? RearOverhangInFeet
		{
			get { return _rearOverhangInFeet; }
			set
			{
				Set<double?>(() => RearOverhangInFeet, ref _rearOverhangInFeet, value);
				RunCustomLogicSetRearOverhangInFeet(value);
			}
		}

		public int VehicleTypeId
		{
			get { return _vehicleTypeId; }
			set
			{
				Set<int>(() => VehicleTypeId, ref _vehicleTypeId, value);
				RunCustomLogicSetVehicleTypeId(value);
			}
		}

		public double? WheelbaseInFeet
		{
			get { return _wheelbaseInFeet; }
			set
			{
				Set<double?>(() => WheelbaseInFeet, ref _wheelbaseInFeet, value);
				RunCustomLogicSetWheelbaseInFeet(value);
			}
		}

		public double? WidthInFeet
		{
			get { return _widthInFeet; }
			set
			{
				Set<double?>(() => WidthInFeet, ref _widthInFeet, value);
				RunCustomLogicSetWidthInFeet(value);
			}
		}

		public double? WidthWithMirrorsInFeet
		{
			get { return _widthWithMirrorsInFeet; }
			set
			{
				Set<double?>(() => WidthWithMirrorsInFeet, ref _widthWithMirrorsInFeet, value);
				RunCustomLogicSetWidthWithMirrorsInFeet(value);
			}
		}

		public virtual System.Collections.Generic.IList<Vehicle> Vehicles { get; set; } // Many to many mapping
		public virtual System.Collections.Generic.IList<VehicleTypeVehicleFeatureType> VehicleTypeVehicleFeatureTypes { get; set; } // Many to many mapping


		partial void InitializePartial();

		#region RunCustomLogicSet

		partial void RunCustomLogicSetCapacity(int? value);
		partial void RunCustomLogicSetCode(string value);
		partial void RunCustomLogicSetCreatedBy(string value);
		partial void RunCustomLogicSetCreatedUtcDate(System.DateTime value);
		partial void RunCustomLogicSetDataVersion(int value);
		partial void RunCustomLogicSetDescription(string value);
		partial void RunCustomLogicSetDisplayPriority(int value);
		partial void RunCustomLogicSetDisplayText(string value);
		partial void RunCustomLogicSetFrontOverhangInFeet(double? value);
		partial void RunCustomLogicSetGroundClearanceInFeet(double? value);
		partial void RunCustomLogicSetHeightInFeet(double? value);
		partial void RunCustomLogicSetIsDeleted(bool value);
		partial void RunCustomLogicSetLengthInFeetMax(double? value);
		partial void RunCustomLogicSetLengthInFeetMin(double? value);
		partial void RunCustomLogicSetLengthWithBumpers(double? value);
		partial void RunCustomLogicSetModifiedBy(string value);
		partial void RunCustomLogicSetModifiedUtcDate(System.DateTime value);
		partial void RunCustomLogicSetRearOverhangInFeet(double? value);
		partial void RunCustomLogicSetVehicleTypeId(int value);
		partial void RunCustomLogicSetWheelbaseInFeet(double? value);
		partial void RunCustomLogicSetWidthInFeet(double? value);
		partial void RunCustomLogicSetWidthWithMirrorsInFeet(double? value);

		#endregion RunCustomLogicSet

	}
}
